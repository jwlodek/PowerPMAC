#! Generated by VisualDCT v2.6
#! DBDSTART
#! DBD("../../dbd/pmac.dbd")
#! DBDEND


# # \file
# # This template allows setting of variables for the symetrie hexapod
# % macro, __doc__, Supporting template that allows setting of variables for a
# symetrie hexapod CS
# % macro, P, Pv Prefix
# % macro, PORT, Motor controller serial port
# % macro, COORD, Co-ordinate system number
# % macro, PREC, Precision of variables
# % macro, name, Object name and gui association name
# This associates an edm screen with the template
# % gui, $(name=), edm, symetrie_hexapod_CS.edl, hexapod=$(P)
# % archiver 1 monitor
record(ai, "$(P):MACHXPOS") {
  field(EGU, "mm")
  field(PREC, "$(PREC=3)")
  field(SCAN, "I/O Intr")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0)PMAC_VDM_&$(COORD)Q91")
}

# % archiver 1 monitor
record(ai, "$(P):MACHYPOS") {
  field(EGU, "mm")
  field(PREC, "$(PREC=3)")
  field(SCAN, "I/O Intr")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0)PMAC_VDM_&$(COORD)Q92")
}

# % archiver 1 monitor
record(ai, "$(P):MACHZPOS") {
  field(EGU, "mm")
  field(PREC, "$(PREC=3)")
  field(SCAN, "I/O Intr")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0)PMAC_VDM_&$(COORD)Q93")
}

# % archiver 1 monitor
record(ai, "$(P):MACHPITCHPOS") {
  field(EGU, "deg")
  field(PREC, "$(PREC=3)")
  field(SCAN, "I/O Intr")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0)PMAC_VDM_&$(COORD)Q94")
}

# % archiver 1 monitor
record(ai, "$(P):MACHYAWPOS") {
  field(EGU, "deg")
  field(PREC, "$(PREC=3)")
  field(SCAN, "I/O Intr")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0)PMAC_VDM_&$(COORD)Q95")
}

# % archiver 1 monitor
record(ai, "$(P):MACHROLLPOS") {
  field(EGU, "deg")
  field(PREC, "$(PREC=3)")
  field(SCAN, "I/O Intr")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0)PMAC_VDM_&$(COORD)Q96")
}

substitute "VAR=&$(COORD)Q27,Q=:USERXOFF,EGU=mm,VARIABLE_PREC=$(PREC=3)"
include "pmacVariableWrite.template"

record(ao, "$(P):USERXOFF:SET") {
  field(FLNK, "$(P):TRANSFCALC")
}

substitute "VAR=&$(COORD)Q28,Q=:USERYOFF,EGU=mm,VARIABLE_PREC=$(PREC=3)"
include "pmacVariableWrite.template"

record(ao, "$(P):USERYOFF:SET") {
  field(FLNK, "$(P):TRANSFCALC")
}

substitute "VAR=&$(COORD)Q29,Q=:USERZOFF,EGU=mm,VARIABLE_PREC=$(PREC=3)"
include "pmacVariableWrite.template"

record(ao, "$(P):USERZOFF:SET") {
  field(FLNK, "$(P):TRANSFCALC")
}

substitute "VAR=&$(COORD)Q30,Q=:USERPITCHOFF,EGU=deg,VARIABLE_PREC=$(PREC=3)"
include "pmacVariableWrite.template"

record(ao, "$(P):USERPITCHOFF:SET") {
  field(FLNK, "$(P):TRANSFCALC")
}

substitute "VAR=&$(COORD)Q31,Q=:USERYAWOFF,EGU=deg,VARIABLE_PREC=$(PREC=3)"
include "pmacVariableWrite.template"

record(ao, "$(P):USERYAWOFF:SET") {
  field(FLNK, "$(P):TRANSFCALC")
}

substitute "VAR=&$(COORD)Q32,Q=:USERROLLOFF,EGU=deg,VARIABLE_PREC=$(PREC=3)"
include "pmacVariableWrite.template"

record(ao, "$(P):USERROLLOFF:SET") {
  field(FLNK, "$(P):TRANSFCALC")
}

substitute "VAR=&$(COORD)Q33,Q=:OBJECTXOFF,EGU=mm,VARIABLE_PREC=$(PREC=3)"
include "pmacVariableWrite.template"

record(ao, "$(P):OBJECTXOFF:SET") {
  field(FLNK, "$(P):TRANSFCALC")
}

substitute "VAR=&$(COORD)Q34,Q=:OBJECTYOFF,EGU=mm,VARIABLE_PREC=$(PREC=3)"
include "pmacVariableWrite.template"

record(ao, "$(P):OBJECTYOFF:SET") {
  field(FLNK, "$(P):TRANSFCALC")
}

substitute "VAR=&$(COORD)Q35,Q=:OBJECTZOFF,EGU=mm,VARIABLE_PREC=$(PREC=3)"
include "pmacVariableWrite.template"

record(ao, "$(P):OBJECTZOFF:SET") {
  field(FLNK, "$(P):TRANSFCALC")
}

substitute "VAR=&$(COORD)Q36,Q=:OBJECTPITCHOFF,EGU=deg,VARIABLE_PREC=$(PREC=3)"
include "pmacVariableWrite.template"

record(ao, "$(P):OBJECTPITCHOFF:SET") {
  field(FLNK, "$(P):TRANSFCALC")
}

substitute "VAR=&$(COORD)Q37,Q=:OBJECTYAWOFF,EGU=deg,VARIABLE_PREC=$(PREC=3)"
include "pmacVariableWrite.template"

record(ao, "$(P):OBJECTYAWOFF:SET") {
  field(FLNK, "$(P):TRANSFCALC")
}

substitute "VAR=&$(COORD)Q38,Q=:OBJECTROLLOFF,EGU=deg,VARIABLE_PREC=$(PREC=3)"
include "pmacVariableWrite.template"

record(ao, "$(P):OBJECTROLLOFF:SET") {
  field(FLNK, "$(P):TRANSFCALC")
}

substitute "VAR=&$(COORD)Q39,Q=:MACHXNLIM,EGU=mm,VARIABLE_PREC=$(PREC=3)"
include "pmacVariableWrite.template"

substitute "VAR=&$(COORD)Q40,Q=:MACHXPLIM,EGU=mm,VARIABLE_PREC=$(PREC=3)"
include "pmacVariableWrite.template"

record(ao, "$(P):MACHXPLIM:SET") {
  field(FLNK, "$(P):RESETMOTIONSTA")
}

substitute "VAR=&$(COORD)Q41,Q=:MACHYNLIM,EGU=mm,VARIABLE_PREC=$(PREC=3)"
include "pmacVariableWrite.template"

record(ao, "$(P):MACHYNLIM:SET") {
  field(FLNK, "$(P):RESETMOTIONSTA")
}

substitute "VAR=&$(COORD)Q42,Q=:MACHYPLIM,EGU=mm,VARIABLE_PREC=$(PREC=3)"
include "pmacVariableWrite.template"

record(ao, "$(P):MACHYPLIM:SET") {
  field(FLNK, "$(P):RESETMOTIONSTA")
}

substitute "VAR=&$(COORD)Q43,Q=:MACHZNLIM,EGU=mm,VARIABLE_PREC=$(PREC=3)"
include "pmacVariableWrite.template"

record(ao, "$(P):MACHZNLIM:SET") {
  field(FLNK, "$(P):RESETMOTIONSTA")
}

substitute "VAR=&$(COORD)Q44,Q=:MACHZPLIM,EGU=mm,VARIABLE_PREC=$(PREC=3)"
include "pmacVariableWrite.template"

record(ao, "$(P):MACHZPLIM:SET") {
  field(FLNK, "$(P):RESETMOTIONSTA")
}

substitute "VAR=&$(COORD)Q45,Q=:MACHPITCHNLIM,EGU=deg,VARIABLE_PREC=$(PREC=3)"
include "pmacVariableWrite.template"

record(ao, "$(P):MACHPITCHNLIM:SET") {
  field(FLNK, "$(P):RESETMOTIONSTA")
}

substitute "VAR=&$(COORD)Q46,Q=:MACHPITCHPLIM,EGU=deg,VARIABLE_PREC=$(PREC=3)"
include "pmacVariableWrite.template"

record(ao, "$(P):MACHPITCHPLIM:SET") {
  field(FLNK, "$(P):RESETMOTIONSTA")
}

substitute "VAR=&$(COORD)Q47,Q=:MACHYAWNLIM,EGU=deg,VARIABLE_PREC=$(PREC=3)"
include "pmacVariableWrite.template"

record(ao, "$(P):MACHYAWNLIM:SET") {
  field(FLNK, "$(P):RESETMOTIONSTA")
}

substitute "VAR=&$(COORD)Q48,Q=:MACHYAWPLIM,EGU=deg,VARIABLE_PREC=$(PREC=3)"
include "pmacVariableWrite.template"

record(ao, "$(P):MACHYAWPLIM:SET") {
  field(FLNK, "$(P):RESETMOTIONSTA")
}

substitute "VAR=&$(COORD)Q49,Q=:MACHROLLNLIM,EGU=deg,VARIABLE_PREC=$(PREC=3)"
include "pmacVariableWrite.template"

record(ao, "$(P):MACHROLLNLIM:SET") {
  field(FLNK, "$(P):RESETMOTIONSTA")
}

substitute "VAR=&$(COORD)Q50,Q=:MACHROLLPLIM,EGU=deg,VARIABLE_PREC=$(PREC=3)"
include "pmacVariableWrite.template"

record(ao, "$(P):MACHROLLPLIM:SET") {
  field(FLNK, "$(P):RESETMOTIONSTA")
}

substitute "VAR=&$(COORD)Q51,Q=:USERXNLIM,EGU=mm,VARIABLE_PREC=$(PREC=3)"
include "pmacVariableWrite.template"

record(ao, "$(P):USERXNLIM:SET") {
  field(FLNK, "$(P):RESETMOTIONSTA")
}

substitute "VAR=&$(COORD)Q52,Q=:USERXPLIM,EGU=mm,VARIABLE_PREC=$(PREC=3)"
include "pmacVariableWrite.template"

record(ao, "$(P):USERXPLIM:SET") {
  field(FLNK, "$(P):RESETMOTIONSTA")
}

substitute "VAR=&$(COORD)Q53,Q=:USERYNLIM,EGU=mm,VARIABLE_PREC=$(PREC=3)"
include "pmacVariableWrite.template"

record(ao, "$(P):USERYNLIM:SET") {
  field(FLNK, "$(P):RESETMOTIONSTA")
}

substitute "VAR=&$(COORD)Q54,Q=:USERYPLIM,EGU=mm,VARIABLE_PREC=$(PREC=3)"
include "pmacVariableWrite.template"

record(ao, "$(P):USERYPLIM:SET") {
  field(FLNK, "$(P):RESETMOTIONSTA")
}

substitute "VAR=&$(COORD)Q55,Q=:USERZNLIM,EGU=mm,VARIABLE_PREC=$(PREC=3)"
include "pmacVariableWrite.template"

record(ao, "$(P):USERZNLIM:SET") {
  field(FLNK, "$(P):RESETMOTIONSTA")
}

substitute "VAR=&$(COORD)Q56,Q=:USERZPLIM,EGU=mm,VARIABLE_PREC=$(PREC=3)"
include "pmacVariableWrite.template"

record(ao, "$(P):USERZPLIM:SET") {
  field(FLNK, "$(P):RESETMOTIONSTA")
}

substitute "VAR=&$(COORD)Q57,Q=:USERPITCHNLIM,EGU=deg,VARIABLE_PREC=$(PREC=3)"
include "pmacVariableWrite.template"

record(ao, "$(P):USERPITCHNLIM:SET") {
  field(FLNK, "$(P):RESETMOTIONSTA")
}

substitute "VAR=&$(COORD)Q58,Q=:USERPITCHPLIM,EGU=deg,VARIABLE_PREC=$(PREC=3)"
include "pmacVariableWrite.template"

record(ao, "$(P):USERPITCHPLIM:SET") {
  field(FLNK, "$(P):RESETMOTIONSTA")
}

substitute "VAR=&$(COORD)Q59,Q=:USERYAWNLIM,EGU=deg,VARIABLE_PREC=$(PREC=3)"
include "pmacVariableWrite.template"

record(ao, "$(P):USERYAWNLIM:SET") {
  field(FLNK, "$(P):RESETMOTIONSTA")
}

substitute "VAR=&$(COORD)Q60,Q=:USERYAWPLIM,EGU=deg,VARIABLE_PREC=$(PREC=3)"
include "pmacVariableWrite.template"

record(ao, "$(P):USERYAWPLIM:SET") {
  field(FLNK, "$(P):RESETMOTIONSTA")
}

substitute "VAR=&$(COORD)Q61,Q=:USERROLLNLIM,EGU=deg,VARIABLE_PREC=$(PREC=3)"
include "pmacVariableWrite.template"

record(ao, "$(P):USERROLLNLIM:SET") {
  field(FLNK, "$(P):RESETMOTIONSTA")
}

substitute "VAR=&$(COORD)Q62,Q=:USERROLLPLIM,EGU=deg,VARIABLE_PREC=$(PREC=3)"
include "pmacVariableWrite.template"

record(ao, "$(P):USERROLLPLIM:SET") {
  field(FLNK, "$(P):RESETMOTIONSTA")
}

substitute "VAR=&$(COORD)Q63,Q=:STALLPERCENT,EGU=%,VARIABLE_PREC=$(PREC=3)"
include "pmacVariableWrite.template"

# % gui, $(name=), sevr
# % archiver 1 monitor
record(mbbi, "$(P):KINEMATICERR") {
  field(SCAN, "I/O Intr")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0)PMAC_VIM_&$(COORD)Q64")
  field(ZRST, "No Error")
  field(ONST, "Description 1")
  field(ONSV, "MAJOR")
  field(TWST, "Description 2")
  field(TWSV, "MAJOR")
  field(THST, "Description 3")
  field(THSV, "MAJOR")
  field(FRST, "Description 4")
  field(FRSV, "MAJOR")
  field(FVST, "Description 5")
  field(FVSV, "MAJOR")
}

# % gui, $(name=), sevr
# % archiver 1 monitor
record(mbbi, "$(P):ABSINITSTA") {
  field(SCAN, "I/O Intr")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0)PMAC_VIM_&$(COORD)Q65")
  field(ZRST, "Undefined")
  field(ZRSV, "INVALID")
  field(ONST, "Done")
  field(TWST, "Error")
  field(TWSV, "MAJOR")
}

record(longin, "$(P):HEXSTA:READ") {
  field(SCAN, "I/O Intr")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0)PMAC_VIM_&$(COORD)Q66")
}

# % archiver 1 monitor
record(mbbiDirect, "$(P):HEXSTA") {
  field(INP, "$(P):HEXSTA:READ CP")
}

record(longin, "$(P):GPIOSTA:READ") {
  field(SCAN, "I/O Intr")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0)PMAC_VIM_&$(COORD)Q67")
}

# % archiver 1 monitor
record(mbbiDirect, "$(P):GPIOSTA") {
  field(INP, "$(P):GPIOSTA:READ CP")
}

record(longin, "$(P):MOTIONSTA:READ") {
  field(SCAN, "I/O Intr")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0)PMAC_VIM_&$(COORD)Q68")
}

# % archiver 1 monitor
record(mbbiDirect, "$(P):MOTIONSTA") {
  field(INP, "$(P):MOTIONSTA:READ CP")
}

# % gui, $(name=), sevr
record(calc, "$(P):ERR") {
  field(CALC, "A+B+C>0")
  field(INPA, "$(P):MOTIONSTA CP")
  field(INPB, "$(P):GPIOSTA CP")
  field(INPC, "$(P):HEXSTA CP")
  field(HIHI, "1")
  field(HHSV, "MAJOR")
}

# % gui, $(name=), sevr
# % archiver 1 monitor
record(mbbi, "$(P):RECOVERYSTA") {
  field(SCAN, "I/O Intr")
  field(DTYP, "asynInt32")
  field(INP, "@asyn($(PORT),0)PMAC_VIM_&$(COORD)Q69")
  field(ZRST, "Undefined")
  field(ONST, "Error abort input")
  field(ONSV, "MAJOR")
  field(TWST, "Moving to ref")
  field(THST, "Reached ref")
  field(FRST, "Error")
  field(FRSV, "MAJOR")
}

record(calc, "(P):RECOVERYCHANGED") {
  field(INPA, "$(P):RECOVERYSTA CP")
  field(FLNK, "$(P):RESETDEMANDS")
}

record(stringout, "$(P):RECOVER") {
  field(VAL, "enable PLC13")
  field(DTYP, "asynOctetWrite")
  field(OUT,  "@asyn($(PORT),0)PMAC_C_WRITE_CMD")
}

# % archiver 1 monitor
record(ai, "$(P):ROTMODE:RBV") {
  field(DESC, "readback")
  field(FLNK, "$(P):ROTMODE:SYNC")
  field(SCAN, "I/O Intr")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0)PMAC_VDM_&$(COORD)Q70")
}

record(calcout, "$(P):ROTMODE:SYNC") {
  field(DESC, "sync demand with readback")
  field(CALC, "A")
  field(OUT, "$(P):ROTMODE PP")
  field(INPA, "$(P):ROTMODE:RBV")
}

record(bo, "$(P):ROTMODE") {
  field(DESC, "demand")
  field(ZNAM, "Around Object")
  field(ONAM, "Around User")
  field(OUT, "$(P):ROTMODE:SET PP")
}

record(ao, "$(P):ROTMODE:SET") {
  field(DESC, "Write value to pmac")
  field(SDIS, "$(P):ROTMODE:SYNC.PACT")
  field(DTYP, "asynFloat64")
  field(OUT, "@asyn($(PORT),0)PMAC_VDM_&$(COORD)Q70")
  field(FLNK, "$(P):TRANSFCALC")
}

record(stringout, "$(P):TRANSFCALC") {
  field(DTYP, "asynOctetWrite")
  field(OUT,  "@asyn($(PORT),0)PMAC_C_WRITE_CMD")
  field(VAL, "enable PLC11")
  field(FLNK, "$(P):RESETDEMANDS")
}

record(stringout, "$(P):RESETMOTIONSTA") {
  field(DTYP, "asynOctetWrite")
  field(OUT,  "@asyn($(PORT),0)PMAC_C_WRITE_CMD")
  field(VAL, "&$(COORD)Q68=0")
}

record(stringout, "$(P):RESETDEMANDS") {
  field(DTYP, "asynOctetWrite")
  field(OUT,  "@asyn($(PORT),0)PMAC_C_WRITE_CMD")
  field(VAL, "p4701=1")
  field(SDIS, "$(P):WAIT_MOVE")
}

record(stringout, "$(P):RUNPROG11") {
  field(DTYP, "asynOctetWrite")
  field(OUT,  "@asyn($(PORT),0)PMAC_C_WRITE_CMD")
  field(VAL, "&$(COORD)b11r")
}

record(ai, "$(P):PROG11ON")
{
  field(SCAN, "I/O Intr")
  field(DTYP, "asynFloat64")
  field(INP, "@asyn($(PORT),0)PMAC_VDM_&$(COORD)Q101")
  field(VAL, "0")
  field(FLNK, "$(P):ON_COMPLETE")
}

record(calcout, "$(P):ON_COMPLETE") {
  field(INPA, "$(P):PROG11ON")
  field(CALC, "A")
  field(OOPT, "When Zero")
  field(OUT, "$(P):WAIT_MOVE CA")
  field(ODLY, "0.2")
}

record(calcout, "$(P):ON_ERROR") {
  field(SCAN, "1 second")
  field(INPA, "$(P):MOTIONSTA")
  field(CALC, "A>0")
  field(OOPT, "When Non-zero")
  field(OUT, "$(P):WAIT_MOVE CA")
  field(ODLY, "0.2")
}

record(busy, "$(P):WAIT_MOVE") {
}

# % archiver 1 monitor
record(ao, "$(P):OUXOFF") {
  field(EGU, "mm")
  field(PREC, "$(PREC=3)")
  field(FLNK, "$(P):OUXOFF_SEQ PP")
}

record(sseq, "$(P):OUXOFF_SEQ") {
  field(LNK1, "$(P):WAIT_MOVE PP")
  field(LNK2, "$(P):USERXOFF PP")
  field(LNK3, "$(P):OBJECTXOFF PP")
  field(LNK4, "$(P):RUNPROG11.PROC PP")
  field(DO1, "1")
  field(DOL2, "$(P):OUXOFF")
  field(DOL3, "$(P):OUXOFF")
  field(DO4, "1")
  field(DLY2, "0.1")
  field(DLY3, "0.1")
  field(DLY4, "0.2")
  field(WAIT2, "Wait")
  field(WAIT3, "Wait")
  field(WAIT4, "Wait")
}


# % archiver 1 monitor
record(ao, "$(P):OUYOFF") {
  field(EGU, "mm")
  field(PREC, "$(PREC=3)")
  field(FLNK, "$(P):OUYOFF_SEQ PP")
}

record(sseq, "$(P):OUYOFF_SEQ") {
  field(LNK1, "$(P):WAIT_MOVE PP")
  field(LNK2, "$(P):USERYOFF PP")
  field(LNK3, "$(P):OBJECTYOFF PP")
  field(LNK4, "$(P):RUNPROG11.PROC PP")
  field(DO1, "1")
  field(DOL2, "$(P):OUYOFF")
  field(DOL3, "$(P):OUYOFF")
  field(DO4, "1")
  field(DLY2, "0.1")
  field(DLY3, "0.1")
  field(DLY4, "0.2")
  field(WAIT2, "Wait")
  field(WAIT3, "Wait")
  field(WAIT4, "Wait")
}

# % archiver 1 monitor
record(ao, "$(P):OUZOFF") {
  field(EGU, "mm")
  field(PREC, "$(PREC=3)")
  field(FLNK, "$(P):OUZOFF_SEQ PP")
}

record(sseq, "$(P):OUZOFF_SEQ") {
  field(LNK1, "$(P):WAIT_MOVE PP")
  field(LNK2, "$(P):USERZOFF PP")
  field(LNK3, "$(P):OBJECTZOFF PP")
  field(LNK4, "$(P):RUNPROG11.PROC PP")
  field(DO1, "1")
  field(DOL2, "$(P):OUZOFF")
  field(DOL3, "$(P):OUZOFF")
  field(DO4, "1")
  field(DLY2, "0.1")
  field(DLY3, "0.1")
  field(DLY4, "0.2")
  field(WAIT2, "Wait")
  field(WAIT3, "Wait")
  field(WAIT4, "Wait")
}


#! Further lines contain data used by VisualDCT
#! View(128,2243,1.1)
#! Record("$(P):MACHXPOS",140,2414,0,0,"$(P):MACHXPOS")
#! Record("$(P):MACHYPOS",380,2414,0,0,"$(P):MACHYPOS")
#! Record("$(P):MACHZPOS",620,2414,0,0,"$(P):MACHZPOS")
#! Record("$(P):MACHPITCHPOS",860,2414,0,0,"$(P):MACHPITCHPOS")
#! Record("$(P):MACHYAWPOS",1100,2414,0,0,"$(P):MACHYAWPOS")
#! Record("$(P):MACHROLLPOS",1340,2414,0,0,"$(P):MACHROLLPOS")
#! Record("$(P):USERXPOS",140,2574,0,0,"$(P):USERXPOS")
#! Record("$(P):USERYPOS",380,2574,0,0,"$(P):USERYPOS")
#! Record("$(P):USERZPOS",620,2574,0,0,"$(P):USERZPOS")
#! Record("$(P):USERPITCHPOS",860,2574,0,0,"$(P):USERPITCHPOS")
#! Record("$(P):USERYAWPOS",1100,2574,0,0,"$(P):USERYAWPOS")
#! Record("$(P):USERROLLPOS",1340,2574,0,0,"$(P):USERROLLPOS")
#! Record("$(P):KINEMATICERR",140,2768,0,0,"$(P):KINEMATICERR")
#! Record("$(P):ABSINITSTA",380,2751,0,0,"$(P):ABSINITSTA")
#! Record("$(P):MOTIONSTA",400,3121,0,0,"$(P):MOTIONSTA")
#! Field("$(P):MOTIONSTA.VAL",16777215,1,"$(P):MOTIONSTA.VAL")
#! Record("$(P):GPIOSTA",640,3121,0,0,"$(P):GPIOSTA")
#! Field("$(P):GPIOSTA.VAL",16777215,1,"$(P):GPIOSTA.VAL")
#! Record("$(P):HEXSTA",880,3121,0,0,"$(P):HEXSTA")
#! Field("$(P):HEXSTA.VAL",16777215,0,"$(P):HEXSTA.VAL")
#! Record("$(P):ERR",1120,3120,0,0,"$(P):ERR")
#! Field("$(P):ERR.INPA",16777215,0,"$(P):ERR.INPA")
#! Link("$(P):ERR.INPA","$(P):MOTIONSTA.VAL")
#! Field("$(P):ERR.INPB",16777215,0,"$(P):ERR.INPB")
#! Link("$(P):ERR.INPB","$(P):GPIOSTA.VAL")
#! Field("$(P):ERR.INPC",16777215,0,"$(P):ERR.INPC")
#! Link("$(P):ERR.INPC","$(P):HEXSTA.VAL")
#! Record("$(P):RECOVERYSTA",1580,2766,0,0,"$(P):RECOVERYSTA")
#! Record("$(P):RECOVER",1360,2821,0,0,"$(P):RECOVER")
